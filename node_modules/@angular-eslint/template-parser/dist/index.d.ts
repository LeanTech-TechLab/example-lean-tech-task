import type { TSESTree } from '@typescript-eslint/types';
import { ScopeManager } from 'eslint-scope';
import { convertElementSourceSpanToLoc, convertNodeSourceSpanToLoc } from './convert-source-span-to-loc';
interface Node {
    [key: string]: any;
    type: string;
}
interface VisitorKeys {
    [nodeName: string]: string[];
}
interface Token extends TSESTree.BaseNode {
    type: string;
    value: string;
}
interface AST extends Node, Token {
    comments: Token[];
    tokens: Token[];
    templateNodes: any[];
}
declare function parseForESLint(code: string, options: {
    filePath: string;
}): {
    ast: AST;
    scopeManager: ScopeManager;
    visitorKeys: VisitorKeys;
    services: {
        convertElementSourceSpanToLoc: typeof convertElementSourceSpanToLoc;
        convertNodeSourceSpanToLoc: typeof convertNodeSourceSpanToLoc;
    };
};
export { parseForESLint };
export declare function parse(code: string, options: {
    filePath: string;
}): AST;
